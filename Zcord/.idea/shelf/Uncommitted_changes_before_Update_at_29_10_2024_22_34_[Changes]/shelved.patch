Index: logic/Main/Chat/ChatClass/Chat.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from logic.Main.Chat.ChatClass.ChatGUI import Ui_Chat\r\nfrom PyQt6 import QtWidgets, QtCore\r\nfrom logic.Main.Chat.Message.Message import Message\r\nfrom logic.Message import message_client\r\n\r\n\r\nclass Chat(QtWidgets.QWidget):\r\n    def __init__(self, chatId, friendNick, user):\r\n        super(Chat, self).__init__()\r\n\r\n        self.ui = Ui_Chat()\r\n        self.ui.setupUi(self)\r\n\r\n        self.__chatId = chatId\r\n        self.__user = user\r\n        self.__friendNickname = friendNick\r\n\r\n\r\n        self.ui.UsersNickInChat.setText(friendNick)\r\n        self.ui.UsersLogoinChat.setText(friendNick[0])\r\n\r\n        self.installEventFilter(self)\r\n\r\n        self.ui.Send_button.clicked.connect(self.sendMessage)\r\n\r\n        self.ui.ChatScroll.setSpacing(10)\r\n\r\n    def sendMessage(self):\r\n        messageText = self.ui.Chat_input_.text()\r\n\r\n        if len(messageText) == 0:\r\n            return\r\n\r\n        message_client.MessageConnection.send_message(messageText, self.__user.getNickName())\r\n        message = Message(messageText, self.__user.getNickName())\r\n\r\n        widget = QtWidgets.QListWidgetItem(self.ui.ChatScroll)\r\n        widget.setSizeHint(message.ui.Message_.sizeHint())\r\n\r\n        self.ui.ChatScroll.addItem(widget)\r\n        self.ui.ChatScroll.setItemWidget(widget, message.ui.Message_)\r\n        self.ui.ChatScroll.setCurrentItem(widget)\r\n        self.ui.Chat_input_.clear()\r\n\r\n\r\n\r\n    def recieveMessage(self, text):\r\n        if len(text) == 0:\r\n            return\r\n\r\n        message = Message(text, self.__friendNickname)\r\n\r\n        widget = QtWidgets.QListWidgetItem(self.ui.ChatScroll)\r\n        widget.setSizeHint(message.ui.Message_.sizeHint())\r\n\r\n\r\n\r\n        self.ui.ChatScroll.addItem(widget)\r\n        self.ui.ChatScroll.setItemWidget(widget, message.ui.Message_)\r\n        self.ui.ChatScroll.setCurrentItem(widget)\r\n\r\n\r\n\r\n\r\n\r\n\r\n    def getNickName(self):\r\n        return self.__friendNickname\r\n\r\n\r\n    def getChatWidget(self):\r\n        return self.ui\r\n\r\n    def getChatId(self):\r\n        return self.__chatId\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/logic/Main/Chat/ChatClass/Chat.py b/logic/Main/Chat/ChatClass/Chat.py
--- a/logic/Main/Chat/ChatClass/Chat.py	(revision 97a6c90431510479a6cebbc5e88df6fec2368540)
+++ b/logic/Main/Chat/ChatClass/Chat.py	(date 1730196557576)
@@ -8,6 +8,8 @@
     def __init__(self, chatId, friendNick, user):
         super(Chat, self).__init__()
 
+        print(1)
+
         self.ui = Ui_Chat()
         self.ui.setupUi(self)
 
@@ -19,8 +21,6 @@
         self.ui.UsersNickInChat.setText(friendNick)
         self.ui.UsersLogoinChat.setText(friendNick[0])
 
-        self.installEventFilter(self)
-
         self.ui.Send_button.clicked.connect(self.sendMessage)
 
         self.ui.ChatScroll.setSpacing(10)
Index: logic/Message/message_client.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import socket\r\nimport threading\r\nimport msgspec\r\nfrom logic.Main.Chat.ChatClass import Chat\r\n\r\n\r\nclass MainInterface:\r\n    __current_chat = 1\r\n\r\n    def __init__(self):\r\n        pass\r\n\r\n    @staticmethod\r\n    def change_chat(current_chat, nickname):\r\n        MainInterface.__current_chat = current_chat\r\n        msg = f\"{MainInterface.return_current_chat()}, {nickname}, {'change chat'}\".encode(\"utf-8\")\r\n        MessageConnection.client_tcp.sendall(msg)\r\n\r\n    @staticmethod\r\n    def return_current_chat():\r\n        return MainInterface.__current_chat\r\n\r\n\r\nclass MessageConnection(object):\r\n    cache_chat = 0\r\n    client_tcp = 0\r\n    user = \"\"\r\n\r\n    def __init__(self, client_tcp, cache_chat, user):\r\n        MessageConnection.set_cache_chat(cache_chat)\r\n        MessageConnection.set_client_tcp(client_tcp)\r\n        MessageConnection.set_user(user)\r\n\r\n    @staticmethod\r\n    def set_user(user):\r\n        MessageConnection.user = user\r\n\r\n    @staticmethod\r\n    def set_cache_chat(cache_chat):\r\n        MessageConnection.cache_chat = cache_chat\r\n\r\n    @staticmethod\r\n    def set_client_tcp(client_tcp):\r\n        MessageConnection.client_tcp = client_tcp\r\n\r\n    @staticmethod\r\n    def send_message(message, nickname):\r\n        msg = f\"{MainInterface.return_current_chat()}, {nickname}, {message}\".encode(\"utf-8\")\r\n        MessageConnection.client_tcp.sendall(msg)\r\n\r\n    @staticmethod\r\n    def recv_message(nickname_yours, chats):\r\n        while True:\r\n            try:\r\n                msg = MessageConnection.client_tcp.recv(1025)\r\n                header = msg[0:1]\r\n                msg = msg[1:]\r\n                if header == b'1':\r\n                    cache = MessageConnection.deserialize(msg)\r\n                    for i in cache:\r\n                        print(i)\r\n                    continue\r\n                msg = msg.decode(\"utf-8\").split(\", \")\r\n                message = msg[0]\r\n                if message == 'NICK':\r\n                    MessageConnection.client_tcp.send(f\"{nickname_yours}, {MessageConnection.serialize(MessageConnection.cache_chat).decode('utf-8')}\".encode('utf-8'))\r\n                elif message == 'CONNECT':\r\n                    print(\"Подключено к серверу!\")\r\n                else:\r\n                    date_now = msg[1]\r\n                    nickname = msg[2]\r\n                    if MainInterface.return_current_chat() != 0:\r\n                        if nickname != MessageConnection.user.getNickName():\r\n                            for chat in chats.get():\r\n                                print(chat.getNickName(), nickname)\r\n                                if chat.getNickName() == nickname:\r\n                                    chat.recieveMessage(message)\r\n                                    print(date_now, message)\r\n            except ConnectionResetError:\r\n                print(\"Ошибка, конец соединения\")\r\n                MessageConnection.client_tcp.close()\r\n                break\r\n\r\n    @staticmethod\r\n    def get_tcp_server(self):\r\n        return self.client_tcp\r\n\r\n    @staticmethod\r\n    def deserialize(message):\r\n        cache = msgspec.json.decode(message)\r\n        return cache\r\n\r\n    @staticmethod\r\n    def serialize(x):\r\n        ser = msgspec.json.encode(x)\r\n        return ser\r\n\r\n\r\ndef thread_start(nickname, chats):\r\n    MessageConnection.recv_message(nickname, chats)\r\n    #receive_thread = threading.Thread(target=MessageConnection.recv_message, args=(nickname, chats,))\r\n    #receive_thread.start()\r\n\r\n\r\ndef call(nickname, chat_id, user, chats):\r\n    SERVER_IP = \"26.36.124.241\"  # IP адрес сервера\r\n    SERVER_PORT = 55555  # Порт, используемый сервером\r\n\r\n    try:\r\n        client_tcp = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\r\n        client_tcp.connect((SERVER_IP, SERVER_PORT))\r\n    except ConnectionRefusedError:\r\n        print(\"Не удалось подключится к серверу или сервер неактивен\")\r\n        exit(0)\r\n\r\n    cache_chat = {\"chat_id\": {}}\r\n    for k in chat_id:\r\n        cache_chat[\"chat_id\"][k] = []\r\n\r\n    MessageConnection(client_tcp, cache_chat, user)\r\n\r\n    print(\"Старт клиента сообщений\")\r\n\r\n    thread_start(nickname, chats)\r\n\r\n    return client_tcp\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/logic/Message/message_client.py b/logic/Message/message_client.py
--- a/logic/Message/message_client.py	(revision 97a6c90431510479a6cebbc5e88df6fec2368540)
+++ b/logic/Message/message_client.py	(date 1730230192734)
@@ -1,7 +1,8 @@
 import socket
 import threading
 import msgspec
-from logic.Main.Chat.ChatClass import Chat
+from PyQt6.QtCore import QObject, QThread, pyqtSignal, pyqtSlot
+from PyQt6.QtCore import QThread
 
 
 class MainInterface:
@@ -22,15 +23,19 @@
 
 
 class MessageConnection(object):
+
+    finished = pyqtSignal()
     cache_chat = 0
     client_tcp = 0
     user = ""
 
     def __init__(self, client_tcp, cache_chat, user):
+        super(MessageConnection, self).__init__()
         MessageConnection.set_cache_chat(cache_chat)
         MessageConnection.set_client_tcp(client_tcp)
         MessageConnection.set_user(user)
 
+
     @staticmethod
     def set_user(user):
         MessageConnection.user = user
@@ -48,6 +53,13 @@
         msg = f"{MainInterface.return_current_chat()}, {nickname}, {message}".encode("utf-8")
         MessageConnection.client_tcp.sendall(msg)
 
+    @staticmethod
+    def sendMessageToQt(chats, nickname, message):
+        for chat in chats.get():
+            if chat.getNickName() == nickname:
+                print(123223213123)
+                MessageConnection.finished.connect(chat.recieveMessage)
+
     @staticmethod
     def recv_message(nickname_yours, chats):
         while True:
@@ -70,17 +82,16 @@
                     date_now = msg[1]
                     nickname = msg[2]
                     if MainInterface.return_current_chat() != 0:
+                        print(nickname)
                         if nickname != MessageConnection.user.getNickName():
-                            for chat in chats.get():
-                                print(chat.getNickName(), nickname)
-                                if chat.getNickName() == nickname:
-                                    chat.recieveMessage(message)
-                                    print(date_now, message)
+                            MessageConnection.sendMessageToQt(chats, nickname, message)
+                            MessageConnection.finished.emit(nickname, message)
             except ConnectionResetError:
                 print("Ошибка, конец соединения")
                 MessageConnection.client_tcp.close()
                 break
 
+
     @staticmethod
     def get_tcp_server(self):
         return self.client_tcp
@@ -97,13 +108,12 @@
 
 
 def thread_start(nickname, chats):
-    MessageConnection.recv_message(nickname, chats)
-    #receive_thread = threading.Thread(target=MessageConnection.recv_message, args=(nickname, chats,))
-    #receive_thread.start()
+    receive_thread = threading.Thread(target=MessageConnection.recv_message, args=(nickname, chats,))
+    receive_thread.start()
 
 
 def call(nickname, chat_id, user, chats):
-    SERVER_IP = "26.36.124.241"  # IP адрес сервера
+    SERVER_IP = "26.181.96.20"  # IP адрес сервера
     SERVER_PORT = 55555  # Порт, используемый сервером
 
     try:
Index: logic/Message/message_server.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import socket\r\nimport threading\r\nfrom datetime import datetime\r\nimport msgspec\r\nimport copy\r\n\r\n\r\nclass MessageRoom(object):\r\n\r\n    nicknames_in_chats = {}\r\n    cache_chat = {}\r\n\r\n    @staticmethod\r\n    def set_nicknames_in_chats(arr):\r\n        MessageRoom.nicknames_in_chats = {**MessageRoom.nicknames_in_chats, **arr}\r\n        print(MessageRoom.nicknames_in_chats)\r\n\r\n    @staticmethod\r\n    def set_cache_chat(arr):\r\n        MessageRoom.cache_chat = {**MessageRoom.cache_chat, **arr}\r\n\r\n    def __init__(self, chat_id):\r\n        MessageRoom.set_cache_chat(copy.deepcopy(chat_id))\r\n        MessageRoom.set_nicknames_in_chats(copy.deepcopy(chat_id))\r\n\r\n    @staticmethod\r\n    def serialize(x):\r\n        ser = msgspec.json.encode(x)\r\n        return ser\r\n\r\n    @staticmethod\r\n    def deserialize(message):\r\n        cache = msgspec.json.decode(message)\r\n        return cache\r\n\r\n    @staticmethod\r\n    def broadcast(msg):\r\n        chat_code = msg[0]\r\n        date_now = msg[1]\r\n        nickname = msg[2]\r\n        message = msg[3]\r\n        for client in MessageRoom.nicknames_in_chats['chat_id'][chat_code]:\r\n            ret = b'0' + f\"{date_now}, {nickname}, {message}\".encode('utf-8')\r\n            clients[client].send(ret)\r\n\r\n    @staticmethod\r\n    def handle(client, nickname):\r\n        while True:\r\n            try:\r\n                # Broadcasting Messages\r\n                flg = False\r\n                msg = client.recv(1024)\r\n                msg = msg.decode('utf-8').split(\", \")\r\n                chat_code = str(msg[0])\r\n                nickname = msg[1]\r\n                message = msg[2]\r\n                if message == \"change chat\":\r\n                    client.send(b'1' + MessageRoom.serialize(MessageRoom.cache_chat[\"chat_id\"][chat_code]))\r\n                    flg = True\r\n                if nickname not in MessageRoom.nicknames_in_chats['chat_id'][chat_code]:\r\n                    MessageRoom.nicknames_in_chats['chat_id'][chat_code].append(nickname)\r\n                    try:\r\n                        if chat_code != old_chat_cod:\r\n                            del MessageRoom.nicknames_in_chats['chat_id'][old_chat_cod][MessageRoom.nicknames_in_chats['chat_id'][old_chat_cod].index(nickname)]\r\n                    except UnboundLocalError:\r\n                        pass\r\n                else:\r\n                    old_chat_cod = str(chat_code)\r\n\r\n                if flg:\r\n                    continue\r\n\r\n                date_now = f\"[{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}] \"\r\n                date_now = date_now\r\n                print(MessageRoom.nicknames_in_chats['chat_id'][chat_code])\r\n                MessageRoom.broadcast((chat_code, message, date_now, nickname))\r\n\r\n                MessageRoom.cache_chat[\"chat_id\"][chat_code].append(f\"{date_now + nickname}: {message}\")\r\n\r\n                if len(MessageRoom.cache_chat[\"chat_id\"][chat_code]) >= 20:\r\n                    del MessageRoom.cache_chat[\"chat_id\"][chat_code][0]\r\n\r\n            except ConnectionResetError:\r\n                # Removing And Closing Clients\r\n                for j in MessageRoom.nicknames_in_chats['chat_id']:\r\n                    if nickname in MessageRoom.nicknames_in_chats['chat_id'][j]:\r\n                        MessageRoom.nicknames_in_chats['chat_id'][j].remove(nickname)\r\n                clients.pop(nickname)\r\n                client.close()\r\n                print(f\"{nickname} left!\")\r\n                break\r\n\r\n\r\ndef receive():\r\n    while True:\r\n        # Accept Connection\r\n        client, address = server_msg.accept()\r\n        print(f\"Connected to {address}\")\r\n\r\n        # Request And Store Nickname\r\n        client.send(b'0' + 'NICK'.encode('utf-8'))\r\n        msg = client.recv(1024)\r\n        msg = msg.decode('utf-8').split(\", \")\r\n        print(msg)\r\n        nickname = msg[0]\r\n        chat_id = MessageRoom.deserialize(msg[1])\r\n        clients[nickname] = client\r\n        # Print And Broadcast Nickname\r\n        print(f\"Nickname is {nickname}\")\r\n\r\n        client.send(b'0' + 'CONNECT'.encode('utf-8'))\r\n\r\n        msg_obj = MessageRoom(chat_id)\r\n        # Start Handling Thread For Client\r\n        thread = threading.Thread(target=MessageRoom.handle, args=(client, nickname,))\r\n        thread.start()\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    HOST = \"26.36.124.241\"\r\n    PORT = 55555\r\n    server_msg = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\r\n    server_msg.bind((HOST, PORT))\r\n    server_msg.listen()\r\n    clients = {}\r\n    receive()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/logic/Message/message_server.py b/logic/Message/message_server.py
--- a/logic/Message/message_server.py	(revision 97a6c90431510479a6cebbc5e88df6fec2368540)
+++ b/logic/Message/message_server.py	(date 1730228545839)
@@ -5,6 +5,7 @@
 import copy
 
 
+
 class MessageRoom(object):
 
     nicknames_in_chats = {}
@@ -117,7 +118,7 @@
 
 
 if __name__ == "__main__":
-    HOST = "26.36.124.241"
+    HOST = "26.181.96.20"
     PORT = 55555
     server_msg = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
     server_msg.bind((HOST, PORT))
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e2675407-eb81-4f0c-aeb8-d0891b15042f\" name=\"Changes\" comment=\"Иправление ошибки с отображением друзей\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/logic/Main/Chat/ChatClass/Chat.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/logic/Main/Chat/ChatClass/Chat.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/logic/Message/message_client.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/logic/Message/message_client.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2nzLBWBiLLzuImwzdszM93DO9IJ\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Dmitriy&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\" selected=\"Python.zcord\">\r\n    <configuration name=\"UserAuthorization\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Zcord\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/logic/Authorization\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/logic/Authorization/UserAuthorization.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"audio_server\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Zcord\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/logic/Voice\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/logic/Voice/audio_server.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"message_client\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Zcord\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/logic/Message\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/logic/Message/message_client.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"message_server\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Zcord\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/logic/Message\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/logic/Message/message_server.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"zcord\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Zcord\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/zcord.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.zcord\" />\r\n        <item itemvalue=\"Python.message_server\" />\r\n        <item itemvalue=\"Python.message_client\" />\r\n        <item itemvalue=\"Python.UserAuthorization\" />\r\n        <item itemvalue=\"Python.audio_server\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e2675407-eb81-4f0c-aeb8-d0891b15042f\" name=\"Changes\" comment=\"Добавление а\" />\r\n      <created>1729970822841</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1729970822841</updated>\r\n      <workItem from=\"1729970824543\" duration=\"58000\" />\r\n      <workItem from=\"1729971049684\" duration=\"13258000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Zcord терпит изменения\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729975215590</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729975215590</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Zcord терпит изменения 2\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729976724518</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729976724518</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Zcord терпит изменения 2\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729977035814</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729977035814</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Zcord терпит изменения 3\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729982319912</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729982319912</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Иправление ошибки с отображением друзей\">\r\n      <created>1730055709502</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730055709502</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"6\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Zcord терпит изменения\" />\r\n    <MESSAGE value=\"Zcord терпит изменения 2\" />\r\n    <MESSAGE value=\"Zcord терпит изменения 3\" />\r\n    <MESSAGE value=\"Иправление ошибки с отображением друзей\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Иправление ошибки с отображением друзей\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/Zcord$zcord.coverage\" NAME=\"zcord Coverage Results\" MODIFIED=\"1729984269127\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/Zcord$message_server.coverage\" NAME=\"message_server Coverage Results\" MODIFIED=\"1729984270097\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/logic/Message\" />\r\n    <SUITE FILE_PATH=\"coverage/Zcord$audio_server.coverage\" NAME=\"audio_server Coverage Results\" MODIFIED=\"1729971140087\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/logic/Voice\" />\r\n    <SUITE FILE_PATH=\"coverage/Zcord$UserAuthorization.coverage\" NAME=\"UserAuthorization Coverage Results\" MODIFIED=\"1729971150493\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/logic/Authorization\" />\r\n    <SUITE FILE_PATH=\"coverage/Zcord$message_client.coverage\" NAME=\"message_client Coverage Results\" MODIFIED=\"1729973828182\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/logic/Message\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 97a6c90431510479a6cebbc5e88df6fec2368540)
+++ b/.idea/workspace.xml	(date 1730230018819)
@@ -6,8 +6,10 @@
   <component name="ChangeListManager">
     <list default="true" id="e2675407-eb81-4f0c-aeb8-d0891b15042f" name="Changes" comment="Иправление ошибки с отображением друзей">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Resources/user/User.json" beforeDir="false" afterPath="$PROJECT_DIR$/Resources/user/User.json" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/logic/Main/Chat/ChatClass/Chat.py" beforeDir="false" afterPath="$PROJECT_DIR$/logic/Main/Chat/ChatClass/Chat.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/logic/Message/message_client.py" beforeDir="false" afterPath="$PROJECT_DIR$/logic/Message/message_client.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/logic/Message/message_server.py" beforeDir="false" afterPath="$PROJECT_DIR$/logic/Message/message_server.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -16,6 +18,7 @@
   </component>
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
+    <option name="RESET_MODE" value="MIXED" />
     <option name="UPDATE_TYPE" value="REBASE" />
   </component>
   <component name="MarkdownSettingsMigration">
Index: Resources/user/User.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"nickname\": \"BYDLO\", \"password\": \"12345\"}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/user/User.json b/Resources/user/User.json
--- a/Resources/user/User.json	(revision 97a6c90431510479a6cebbc5e88df6fec2368540)
+++ b/Resources/user/User.json	(date 1730230224789)
@@ -1,1 +1,1 @@
-{"nickname": "BYDLO", "password": "12345"}
\ No newline at end of file
+{"nickname": "BYDLO2", "password": "12345"}
\ No newline at end of file
